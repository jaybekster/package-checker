#!/usr/bin/env node
'use strict';

var Spinner = require('cli-spinner').Spinner,
	packageChecker = require('../index'),
	chalk = require('chalk'),
	settings = {},
	args = process.argv.slice(2),
	arg;

while (args.length) {
	arg = args.shift();
	switch (arg) {
		case '--dev':
		case '-d':
			settings.dev = args.shift();
			if (settings.dev !== 'true' && settings.dev !== 'false') {
				throw new Error('--dev <boolean> required');
			}
			break;
		case '--prod':
		case '-p':
			settings.prod = args.shift();
			if (settings.prod !== 'true' && settings.prod !== 'false') {
				throw new Error('--prod <boolean> required');
			}
			break;
		case '--directory':
		case '-D':
			settings.directory = args.shift();
			if (!settings.directory) {
				throw new Error('--directory <path> required');
			}
			break;
		case '--path':
		case '-P':
			settings.path = args.shift();
			if (!settings.directory) {
				throw new Error('--path <path> required');
			}
			break;
		default:
			break;
	}
}

var spinner = new Spinner('%s');
spinner.setSpinnerString('|/-\\');
spinner.start();

packageChecker(settings, function(stats) {
	var errorCounter = 0;

	if (stats) {
		for (var packageName in stats) {
			switch (stats[packageName].error) {
				case 'is missing':
					errorCounter += 1;
					console.log(
	                    chalk.bold(packageName + '@' + stats[packageName].actualVersion) +
	                    chalk.red(' is missing')
	                );
					break;
				case 'invalid version':
					errorCounter += 1;
					console.log(
	                    chalk.bold(packageName) +
	                    ' is ' +
	                    chalk.red(stats[packageName].relevantVersion) +
	                    ' instead of ' +
	                    chalk.green(stats[packageName].actualVersion)
	                );
					break;
				default:
					break;
			}
		}
	}

	if (!errorCounter) {
		console.log(chalk.green('No differences were found'));
	}
}).catch(function(err) {
	console.log(err);
});
